# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI/CD for Project

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_deploy:

    runs-on: ubuntu-18.04
    steps:
      # Build
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Test Mysql setup
        run: docker run -e MYSQL_ROOT_PASSWORD=1234 -e MYSQL_DATABASE=realworld -d -p 3306:3306 mysql:8.0.28-oracle
      - name: Build with Maven
        run: mvn -B package --file realworld/pom.xml

      # Deploy
      - name: mv jar file
        run: mv ./realworld/target/realworld-0.0.1-SNAPSHOT.jar ./realworld-0.0.1-SANPSHOT.jar
      - name: Zip the source files
        run: zip realworld-src.zip -r ./*
      - name: make dir
        run: mkdir -p deploy
      - name: move file
        run: mv realworld-src.zip deploy/realworld-src.zip
      - name: aws configure
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: upload zipfile to S3
        env:
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
        run: aws s3 cp  --recursive deploy s3://$AWS_BUCKET

      - name: create-deployment
        env:
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
        run: >
          aws deploy create-deployment --application-name codedeploy-realworld 
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name realworld
          --s3-location bucket=$AWS_BUCKET,bundleType=zip,key=realworld-src.zip

